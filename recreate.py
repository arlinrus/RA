–°–°–´–õ–ö–ê –ù–ê –¢–ï–õ–ï–ì–†–ê–ú–ú –ë–û–¢–ê : @csv_json_bot
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É—Å–ø–µ–ª–∞ –µ–≥–æ –∑–∞—Ö–æ—Å—Ç–∏—Ç—å, –ø–æ—ç—Ç–æ–º—É –Ω–∞–¥–æ –±—É–¥–µ—Ç –≤—Ä—É—á–Ω—É—é –≤—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ–¥ –≤ IDE

from aiogram.types import ReplyKeyboardMarkup,InlineKeyboardMarkup,InlineKeyboardButton,ReplyKeyboardRemove,KeyboardButton
from aiogram import Bot, Dispatcher, types, executor
import logging


logging.basicConfig(level = logging.INFO)
bot = Bot(token= '7058282410:AAGMkIh2dt2Q5wyPsPIB5hRrXVr5fZR3msQ')
dp = Dispatcher(bot)

#Buttons
kb = ReplyKeyboardMarkup(resize_keyboard=True)
kb.insert(KeyboardButton('/start')).insert(KeyboardButton('/description'))

kp = InlineKeyboardMarkup(row_width=True)
kp1 = InlineKeyboardButton(text='–ö–æ–¥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ —Åsvüìå', callback_data='to_convert')
kp2 = InlineKeyboardButton(text='–ö–æ–¥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ json –∏–∑ csvüìå', url = 'https://colab.research.google.com/drive/12j0nyV7n4fE0xcyq1aP4ufl6qzUDzPNs?usp=sharing#scrollTo=yQFhW_6uPKjt')
kp3 = InlineKeyboardButton(text='–°—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ãüìå',url='https://csvjson.com/csv2json')
kp.insert(kp1)
kp.insert(kp2)
kp.insert(kp3)

NEW_TEXT = '''
/help - –Ω–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
'''
NEW_TEXT2 ='''
–§–∞–π–ª csv –¥–ª—è –ø—Ä–æ–±–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –ø–æ—á—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.–í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –≥—É–≥–ª –¥–∏—Å–∫ –∏ –æ–Ω–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç
–≤ json –∫–æ–¥! '''

CODE_TO_CSV ='''
–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –Ω–∏–∂–µ –∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å ID, –∫–æ—Ç–æ—Ä–∞—è –¥–ª—è –≤–∞—Å —É–¥–æ–±–Ω–µ–µ –≤—Å–µ–≥–æ –∏ –¥–∞–Ω–Ω—ã–π –∫–æ–¥ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ csv.

import pandas as pd
data ={
     'Scool': ['Math' , 'Physics' , 'Information Technologies' , 'Russian language' , 'English language' , 'Biological', 'Physical Education'],
     'District':['Moskovsky','Frunzensky','Admiralteisky','Vasileostrovsky','Petrogradsky','Krasnoselsry','Kyrortny'],
     'Quality': ['Smart', 'Beautiful', 'Strange', 'Exciting','Wonderful','Auwful','Bad']
}

df = pd.DataFrame(data)
df.to_csv('new_csv', index = False)
'''

CODE_TO_JSON='''
#–î–∞–Ω–Ω—ã–π –∫–æ–¥ –ª—É—á—à–µ –≤—Å–µ–≥–æ —Ä–µ–∞–ª–∏–∑—ã–≤–∞–≤–∞–µ—Ç—Å—è –≤ google colab, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è 
–≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ç–∞–∫ –∫–∞–∫ –∏—Ç–∞–∫ –≤—Å–µ –≤—Å—Ç—Ä–æ–µ–Ω–æ!
'''
async def on_startup(_):
    print('Ready!')
@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    await bot.send_message(chat_id = message.from_user.id,
                           text = NEW_TEXT ,
                           reply_markup= kb)
    await message.delete()

@dp.message_handler(commands=['description'])
async def cmd_start(message: types.Message):
    await bot.send_message(chat_id = message.from_user.id,
                           text = NEW_TEXT2 ,
                           reply_markup= kb)
@dp.message_handler(commands=['help'])
async def cmd_start(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id ,text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–∞—Ç—å —Ñ–∞–π–ª csv –∞ json —Ñ–æ—Ä–º–∞—Ç: ', reply_markup=kp)
    await message.delete()

@dp.callback_query_handler(text='to_convert')
async def cmd_convert(call:types.CallbackQuery):
    await bot.send_message(call.from_user.id,text=CODE_TO_CSV)

@dp.message_handler()
async def echo(message: types.Message):
    await message.reply('–Ø –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!')

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)






